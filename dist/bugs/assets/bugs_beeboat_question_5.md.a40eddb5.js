import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.4df21498.js";const h=JSON.parse('{"title":"BtTableEx高级搜索报错 senceDataList.forEach is not a function","description":"","frontmatter":{},"headers":[],"relativePath":"bugs/beeboat/question/5.md","filePath":"bugs/beeboat/question/5.md","lastUpdated":1698909490000}'),p={name:"bugs/beeboat/question/5.md"},o=l(`<h1 id="bttableex高级搜索报错-sencedatalist-foreach-is-not-a-function" tabindex="-1">BtTableEx高级搜索报错 senceDataList.forEach is not a function <a class="header-anchor" href="#bttableex高级搜索报错-sencedatalist-foreach-is-not-a-function" aria-label="Permalink to &quot;BtTableEx高级搜索报错 senceDataList.forEach is not a function&quot;">​</a></h1><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>使用BtTableEx后控制console报错信息如下:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Uncaught</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> promise) </span><span style="color:#B392F0;">TypeError</span><span style="color:#E1E4E8;">: senceDataList.forEach is not a </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">at</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadTableSence</span><span style="color:#E1E4E8;"> (index.js</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">7886</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">19</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Uncaught</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> promise) </span><span style="color:#6F42C1;">TypeError</span><span style="color:#24292E;">: senceDataList.forEach is not a </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">at</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadTableSence</span><span style="color:#24292E;"> (index.js</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">7886</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">19</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="产生原因" tabindex="-1">产生原因 <a class="header-anchor" href="#产生原因" aria-label="Permalink to &quot;产生原因&quot;">​</a></h2><p>项目内重写了高级搜索的handle类，方法返回值存在问题。具体报错位置如下:</p><p>入参 <code>userId</code>,<code>deviceType</code>,<code>pageId</code> 查询当前页面、当前帐号下的高级搜索方案。实际结果返回的数据有问题</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">getSence</span><span style="color:#E1E4E8;">(id: string) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        UserConfigApi.</span><span style="color:#B392F0;">getByDeviceAndUserIdOfPage</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            userId: BtUserTokenInfo.</span><span style="color:#B392F0;">getUserId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">            deviceType: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            pageId: </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#F97583;">import</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">env</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">VITE_APP_CODE</span><span style="color:#9ECBFF;">}-\${</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (res.data?.configText) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;">// 返回结果有问题</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(res.data.configText))</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">getSence</span><span style="color:#24292E;">(id: string) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">(</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        UserConfigApi.</span><span style="color:#6F42C1;">getByDeviceAndUserIdOfPage</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            userId: BtUserTokenInfo.</span><span style="color:#6F42C1;">getUserId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">            deviceType: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            pageId: </span><span style="color:#032F62;">\`\${</span><span style="color:#D73A49;">import</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">meta</span><span style="color:#032F62;">.</span><span style="color:#24292E;">env</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">VITE_APP_CODE</span><span style="color:#032F62;">}-\${</span><span style="color:#24292E;">id</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (res.data?.configText) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;">// 返回结果有问题</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(res.data.configText))</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="解决步骤" tabindex="-1">解决步骤 <a class="header-anchor" href="#解决步骤" aria-label="Permalink to &quot;解决步骤&quot;">​</a></h2><p><code>src/usage/handler/sence-handler.ts</code></p><ol><li>检查SenceHandler类中的saveSence方法</li><li>检查SenceHandler类中的getSence方法</li></ol>`,11),e=[o];function t(c,r,E,y,i,d){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{h as __pageData,u as default};
