import{_ as a,o as t,c as r,Q as e}from"./chunks/framework.53eb7688.js";const S=JSON.parse('{"title":"TypeScript和JavaScript的主要区别","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/八股文/es/02ts和js的区别.md","filePath":"笔记/八股文/es/02ts和js的区别.md"}'),i={name:"笔记/八股文/es/02ts和js的区别.md"},s=e('<h1 id="typescript和javascript的主要区别" tabindex="-1">TypeScript和JavaScript的主要区别 <a class="header-anchor" href="#typescript和javascript的主要区别" aria-label="Permalink to &quot;TypeScript和JavaScript的主要区别&quot;">​</a></h1><h3 id="_1-静态类型检查" tabindex="-1">1. 静态类型检查 <a class="header-anchor" href="#_1-静态类型检查" aria-label="Permalink to &quot;1. 静态类型检查&quot;">​</a></h3><ul><li><strong>TypeScript</strong>：是静态类型的语言/强类型语言，在编译时进行类型检查，有错误在编译时就被发现</li><li><strong>JavaScript</strong>：是动态类型语言/弱类型，没有编译时的类型检查。所有的错误（包括类型错误）都在运行时发现</li></ul><h3 id="_2-类型注解和接口" tabindex="-1">2.类型注解和接口 <a class="header-anchor" href="#_2-类型注解和接口" aria-label="Permalink to &quot;2.类型注解和接口&quot;">​</a></h3><ul><li><strong>TypeScript</strong>：提供了类型注解和接口，允许开发自定义类型，代码更加清晰</li><li><strong>JavaScript</strong>：不支持类型注解和接口</li></ul><h3 id="_3-编译" tabindex="-1">3.编译 <a class="header-anchor" href="#_3-编译" aria-label="Permalink to &quot;3.编译&quot;">​</a></h3><ul><li><strong>TypeScript</strong>：必须编译成 JavaScript 才能在浏览器中运行。这通常通过 TypeScript 编译器或通过 Babel 等构建工具完成</li><li><strong>JavaScript</strong>：可以直接在浏览器或Node中运行，不需要编译</li></ul><h3 id="_4-工具支持" tabindex="-1">4.工具支持 <a class="header-anchor" href="#_4-工具支持" aria-label="Permalink to &quot;4.工具支持&quot;">​</a></h3><ul><li><strong>TypeScript</strong>：强类型语言，编辑器支持比如自动完成、重构工具、更详细的错误提示</li><li><strong>JavaScript</strong>：开发环境提供了对JavaScript的支持，但是依旧不如TypeScript强大和精确</li></ul><h3 id="_5-生态系统和工具链" tabindex="-1">5.生态系统和工具链 <a class="header-anchor" href="#_5-生态系统和工具链" aria-label="Permalink to &quot;5.生态系统和工具链&quot;">​</a></h3><ul><li><strong>TypeScript</strong>：虽然 TypeScript 的生态系统在不断成长，但在一些情况下，它可能需要额外的类型定义文件（例如 DefinitelyTyped 提供的 .d.ts 文件）来与现有的 JavaScript 库一起使用。</li><li><strong>JavaScript</strong>：有一个庞大的生态系统和许多现成的工具</li></ul>',11),o=[s];function l(c,n,p,_,h,d){return t(),r("div",null,o)}const g=a(i,[["render",l]]);export{S as __pageData,g as default};
