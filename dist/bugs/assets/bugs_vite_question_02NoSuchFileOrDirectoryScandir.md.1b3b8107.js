import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.4df21498.js";const p="/bugs/assets/2-3.f19ff6ca.png",o="/bugs/assets/2-2.674e77d1.png",u=JSON.parse(`{"title":"Vite 打包项目时报错 ENOENT: no such file or directory, scandir 'dist/app-ips/langs/'","description":"","frontmatter":{},"headers":[],"relativePath":"bugs/vite/question/02NoSuchFileOrDirectoryScandir.md","filePath":"bugs/vite/question/02NoSuchFileOrDirectoryScandir.md"}`),e={name:"bugs/vite/question/02NoSuchFileOrDirectoryScandir.md"},c=l(`<h1 id="vite-打包项目时报错-enoent-no-such-file-or-directory-scandir-dist-app-ips-langs" tabindex="-1">Vite 打包项目时报错 ENOENT: no such file or directory, scandir &#39;dist/app-ips/langs/&#39; <a class="header-anchor" href="#vite-打包项目时报错-enoent-no-such-file-or-directory-scandir-dist-app-ips-langs" aria-label="Permalink to &quot;Vite 打包项目时报错 ENOENT: no such file or directory, scandir &#39;dist/app-ips/langs/&#39;&quot;">​</a></h1><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/Users/Project/digital-factory-3-ips-web/vite.config.ts:207</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">err</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">^</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[Error: ENOENT: no such file or directory, scandir </span><span style="color:#9ECBFF;">&#39;dist/app-ips/langs/&#39;</span><span style="color:#E1E4E8;">] {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">errno:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-2,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">code:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ENOENT&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">syscall:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;scandir&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">path:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;dist/app-ips/langs/&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;"> ELIFECYCLE </span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Command</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/Users/Project/digital-factory-3-ips-web/vite.config.ts:207</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">throw</span><span style="color:#24292E;"> </span><span style="color:#032F62;">err</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">^</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[Error: ENOENT: no such file or directory, scandir </span><span style="color:#032F62;">&#39;dist/app-ips/langs/&#39;</span><span style="color:#24292E;">] {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">errno:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-2,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">code:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ENOENT&#39;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">syscall:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;scandir&#39;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">path:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;dist/app-ips/langs/&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;"> ELIFECYCLE </span><span style="color:#24292E;"> </span><span style="color:#032F62;">Command</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">.</span></span></code></pre></div><h2 id="产生原因" tabindex="-1">产生原因 <a class="header-anchor" href="#产生原因" aria-label="Permalink to &quot;产生原因&quot;">​</a></h2><p>public文件夹内存在其他多层路径，如图： <img src="`+p+'" alt="public文件夹"></p><p>同时<code>build/plugin.ts</code>打包构建插件中，对于文件夹的递归遍历的方法存在问题。如图： <img src="'+o+`" alt="plugin.ts"></p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>修改<code>build/plugin.ts</code>文件中的<code>recursiveDirectory</code>的递归方法，递归调用的时候不要传递根目录(rootFloder)，要传递上一层目录(floder)，代码如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">recursiveDirectory</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">rootFolder</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">fileListTotal</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">[],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">folder</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">callback</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Function</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">readdir</span><span style="color:#E1E4E8;">(folder, (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">files</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> err</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">checkEnd</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">count </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> files.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        files.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">item</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stat</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">folder</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">item</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">stats</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> err</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (stats.</span><span style="color:#B392F0;">isFile</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    fileListTotal.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(stats.size)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">checkEnd</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (stats.</span><span style="color:#B392F0;">isDirectory</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">recursiveDirectory</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                        rootFolder,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        fileListTotal,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">folder</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">item</span><span style="color:#9ECBFF;">}/\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        checkEnd,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    )</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">        files.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">recursiveDirectory</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">rootFolder</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">fileListTotal</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">[],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">folder</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">callback</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">readdir</span><span style="color:#24292E;">(folder, (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">files</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> err</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">checkEnd</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">count </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> files.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">callback</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        files.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">folder</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">item</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">stats</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> err</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (stats.</span><span style="color:#6F42C1;">isFile</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                    fileListTotal.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(stats.size)</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">checkEnd</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (stats.</span><span style="color:#6F42C1;">isDirectory</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">recursiveDirectory</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                        rootFolder,</span></span>
<span class="line"><span style="color:#24292E;">                        fileListTotal,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">folder</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">item</span><span style="color:#032F62;">}/\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                        checkEnd,</span></span>
<span class="line"><span style="color:#24292E;">                    )</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">        files.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">callback</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,9),t=[c];function r(E,y,i,F,d,h){return a(),n("div",null,t)}const f=s(e,[["render",r]]);export{u as __pageData,f as default};
