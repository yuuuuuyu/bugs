import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.d0ae72ca.js";const u=JSON.parse('{"title":"功能步骤引导","description":"","frontmatter":{},"headers":[],"relativePath":"skills/plugins/dirverjs/dirverjs.md","filePath":"skills/plugins/dirverjs/dirverjs.md"}'),p={name:"skills/plugins/dirverjs/dirverjs.md"},o=l(`<h1 id="功能步骤引导" tabindex="-1">功能步骤引导 <a class="header-anchor" href="#功能步骤引导" aria-label="Permalink to &quot;功能步骤引导&quot;">​</a></h1><h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h2><p>在部分场景下，某些数据需要一直保持，不被浏览器刷新所干扰，此时就需要处理pinia的持久化，要解决这个问题非常简单，在状态改变时将其同步到浏览器的存储中，如 cookie、localStorage、sessionStorage 。每次初始化状态时从存储中去获取初始值即可。</p><p>当前从第三方依赖角度实现pinia的持久化<code>pinia-plugin-persistedstate</code></p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过pnpm</span></span>
<span class="line"><span style="color:#E1E4E8;">pnpm install driver.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过CDN</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">script src</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.js.iife.js&quot;</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#B392F0;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">link rel</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;stylesheet&quot;</span><span style="color:#E1E4E8;"> href</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.css&quot;</span><span style="color:#F97583;">/&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过pnpm</span></span>
<span class="line"><span style="color:#24292E;">pnpm install driver.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过CDN</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">script src</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.js.iife.js&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">&lt;/</span><span style="color:#6F42C1;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">link rel</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;stylesheet&quot;</span><span style="color:#24292E;"> href</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.css&quot;</span><span style="color:#D73A49;">/&gt;</span></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { driver } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;driver.js&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;driver.js/dist/driver.css&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">driverObj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">driver</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  animate: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  showProgress: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  showButtons: [</span><span style="color:#9ECBFF;">&#39;next&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;previous&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;close&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  steps: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { element: </span><span style="color:#9ECBFF;">&#39;#tour-example&#39;</span><span style="color:#E1E4E8;">, popover: { title: </span><span style="color:#9ECBFF;">&#39;Animated Tour Example&#39;</span><span style="color:#E1E4E8;">, description: </span><span style="color:#9ECBFF;">&#39;Here is the code example showing animated tour. Let</span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;">s walk you through it.&#39;</span><span style="color:#E1E4E8;">, side: </span><span style="color:#9ECBFF;">&quot;left&quot;</span><span style="color:#E1E4E8;">, align: </span><span style="color:#9ECBFF;">&#39;start&#39;</span><span style="color:#E1E4E8;"> }},</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">driverObj.</span><span style="color:#B392F0;">drive</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { driver } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;driver.js&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;driver.js/dist/driver.css&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">driverObj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">driver</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  animate: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  showProgress: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  showButtons: [</span><span style="color:#032F62;">&#39;next&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;previous&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;close&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  steps: [</span></span>
<span class="line"><span style="color:#24292E;">    { element: </span><span style="color:#032F62;">&#39;#tour-example&#39;</span><span style="color:#24292E;">, popover: { title: </span><span style="color:#032F62;">&#39;Animated Tour Example&#39;</span><span style="color:#24292E;">, description: </span><span style="color:#032F62;">&#39;Here is the code example showing animated tour. Let</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">s walk you through it.&#39;</span><span style="color:#24292E;">, side: </span><span style="color:#032F62;">&quot;left&quot;</span><span style="color:#24292E;">, align: </span><span style="color:#032F62;">&#39;start&#39;</span><span style="color:#24292E;"> }},</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">driverObj.</span><span style="color:#6F42C1;">drive</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h2><p><a href="https://gitee.com/yu_zhi_yong/bugs-resources" target="_blank" rel="noreferrer">https://gitee.com/yu_zhi_yong/bugs-resources</a></p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><p><a href="https://driverjs.com/docs/installation" target="_blank" rel="noreferrer">https://driverjs.com/docs/installation</a></p>`,12),e=[o];function t(r,c,i,E,y,d){return a(),n("div",null,e)}const F=s(p,[["render",t]]);export{u as __pageData,F as default};
